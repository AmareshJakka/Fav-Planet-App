{"version":3,"sources":["Planet-list.js","Fav-planet-list.js","App.js","reportWebVitals.js","index.js"],"names":["PlanetList","props","console","log","planets","style","display","marginLeft","gridTemplateColumns","padding","gridGap","map","planet","className","name","onClick","addFavorite","id","FavPlanetList","favPlanets","favplanet","App","React","useState","selectedTab","setSelectedTab","setPlanets","useEffect","axios","get","then","res","data","setFavPlanets","AppBar","Tabs","value","onChange","e","val","warn","Tab","label","favorite","isFavourite","includes","concat","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAkCeA,MA/Bf,SAAoBC,GAWlB,OATAC,QAAQC,IAAIF,EAAMG,SAUhB,8BACE,oBAAIC,MAVK,CACXC,QAAS,OACTC,WAAW,OACXC,oBAAqB,wCACrBC,QAAS,OACTC,QAAS,aAKP,SACGT,EAAMG,QAAQO,KAAI,SAAAC,GAAM,OACvB,+BACE,qBAAKC,UAAU,WAAf,SACM,4BACCD,EAAOE,SAGb,wBAAQC,QAAS,kBAAMd,EAAMe,YAAYJ,IAAzC,gCANMA,EAAOK,YCUXC,MA1Bf,SAAuBjB,GASnB,OARFC,QAAQC,IAAIF,EAAMkB,YASd,8BACA,oBAAId,MATI,CACVC,QAAS,OACTC,WAAW,OACXC,oBAAqB,wCACrBC,QAAS,OACTC,QAAS,aAIP,SACGT,EAAMkB,WAAWR,KAAI,SAAAS,GAAS,OAC7B,6BACE,qBAAKP,UAAU,WAAf,SACM,4BACCO,EAAUN,UAHVM,EAAUH,Y,iBC0CdI,MA/Cf,WAAgB,IAAD,EACsBC,IAAMC,SAAS,GADrC,mBACNC,EADM,KACMC,EADN,OAOiBF,mBAAS,IAP1B,mBAONnB,EAPM,KAOGsB,EAPH,KAUbC,qBAAU,WAGVC,IAAMC,IADS,qDACGC,MAAK,SAAAC,GACrB7B,QAAQC,IAAI4B,EAAIC,MAChBN,EAAWK,EAAIC,WAEf,IAjBW,MAmBuBT,mBAAS,IAnBhC,mBAmBNJ,EAnBM,KAmBMc,EAnBN,KA+Bb,OACE,gCAEE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAMC,MAAOZ,EAAaa,SAjCb,SAACC,EAAEC,GACpBrC,QAAQsC,KAAKD,GACbd,EAAec,IA+BX,UACE,cAACE,EAAA,EAAD,CAAKC,MAAM,YAEX,cAACD,EAAA,EAAD,CAAKC,MAAM,qBAGE,IAAhBlB,GAAqB,cAAC,EAAD,CAAYpB,QAASA,EAASY,YAnBpC,SAAA2B,GAElBzC,QAAQC,IAAIgB,IACiB,IAAzBwB,EAASC,aAA0BzB,EAAW0B,SAASF,IAGzDV,EAAcd,EAAW2B,OAAOH,OAcf,IAAhBnB,GAAqB,cAAC,EAAD,CAAeL,WAAYA,QCxCxC4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1fe6bbfc.chunk.js","sourcesContent":["\r\nimport React  from 'react';\r\n\r\nfunction PlanetList(props) {\r\n  \r\n  console.log(props.planets);\r\n   let style = {\r\n    display: \"grid\",\r\n    marginLeft:\"25px\" ,\r\n    gridTemplateColumns: \"repeat(auto-fill, minmax(250px, 1fr))\",\r\n    padding: \"1rem\",\r\n    gridGap: \"1rem 1rem\"\r\n  }\r\n\r\n  return (\r\n    <div >\r\n      <ul style={style}>\r\n        {props.planets.map(planet=>(\r\n          <li key={planet.id}>\r\n            <div className=\"userInfo\">\r\n                  <p>\r\n                  {planet.name}\r\n                  </p>\r\n            </div>\r\n             <button onClick={() => props.addFavorite(planet)}>\r\n                  Add to Favorites\r\n            </button>\r\n          </li>\r\n         ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlanetList;","import React from 'react';\r\n\r\nfunction FavPlanetList(props) {\r\n  console.log(props.favPlanets);\r\n  let style = {\r\n    display: \"grid\",\r\n    marginLeft:\"25px\" ,\r\n    gridTemplateColumns: \"repeat(auto-fill, minmax(250px, 1fr))\",\r\n    padding: \"1rem\",\r\n    gridGap: \"1rem 1rem\"\r\n  }\r\n    return (\r\n      <div >\r\n      <ul style={style}>\r\n        {props.favPlanets.map(favplanet=>(\r\n          <li key={favplanet.id}>\r\n            <div className=\"userInfo\">\r\n                  <p>\r\n                  {favplanet.name}\r\n                  </p>\r\n            </div>\r\n          </li>\r\n         ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FavPlanetList;","\nimport './App.css';\nimport React, {useState,useEffect} from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport PlanetList from './Planet-list';\nimport FavPlanetList from'./Fav-planet-list';\nimport axios from'axios'\n\nfunction App() {\n  const [selectedTab,setSelectedTab]=React.useState(0)\n  const handleTabs = (e,val)=>{\n    console.warn(val);\n    setSelectedTab(val)\n  }\n\n  const [planets, setPlanets] = useState([]);\n\n\n  useEffect(() => {\n\n  const apiUrl = 'https://assignment-machstatz.herokuapp.com/planet';\n  axios.get(apiUrl).then(res=>{\n    console.log(res.data);\n    setPlanets(res.data);\n  })\n  },[]);\n\n  const [favPlanets, setFavPlanets] = useState([]);\n  \n\n  const addFavorite = favorite => {\n    \n    console.log(favPlanets);\n    if (favorite.isFavourite === false && !favPlanets.includes(favorite) ) {\n      \n      \n      setFavPlanets(favPlanets.concat(favorite))\n    }\n  };\n  return (\n    <div >\n      \n      <AppBar >\n        <Tabs value={selectedTab} onChange={handleTabs}>\n          <Tab label=\"Planets\" />\n\n          <Tab label=\"Fav-Planets\"/>\n        </Tabs>\n      </AppBar>\n      {selectedTab === 0 && <PlanetList planets={planets} addFavorite={addFavorite}/>}\n      {selectedTab === 1 && <FavPlanetList favPlanets={favPlanets}/>}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}